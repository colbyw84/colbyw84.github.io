{"version":3,"sources":["App.js","index.js"],"names":["App","props","today","Date","todayStr","getFullYear","getMonth","getDate","currentCount","Number","parseInt","localStorage","getItem","state","todaysCount","number","newCount","this","setItem","setState","first","diff","days","Math","ceil","total","i","className","onClick","changeValue","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA8EeA,E,kDAzEb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAIC,EAAM,IAAIC,KACVC,EAAU,GAAKF,EAAMG,cAAgBH,EAAMI,WAAaJ,EAAMK,UAE9DC,EAAeC,OAAOC,SAASC,aAAaC,QAAQR,IANvC,OAQjBI,EAAgBA,GAAe,EAE/B,EAAKK,MAAQ,CACXC,YAAaN,EACbJ,SAAUA,GAZK,E,+CAkBnB,SAAYW,GACX,IAAD,OACMC,EAAWC,KAAKJ,MAAMC,YAAcC,EAMxC,OAJGC,GAAY,IAEbA,EAAW,GAEN,WACLL,aAAaO,QAAQ,EAAKL,MAAMT,SAAUY,GAC1C,EAAKG,SAAS,CACZL,YAAaE,O,oBAKnB,WAWE,IATA,IAAII,EAAM,IAAIjB,KAAK,QAAU,IAAIA,MAAOE,eAGpCgB,EAFM,IAAIlB,KAEIiB,EAEdE,EAAOC,KAAKC,KAAKH,EAAI,OAErBI,EAAQ,EAEJC,EAAI,EAAGA,GAAKJ,EAAMI,IAEtBD,GAASC,EAGb,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,QAAf,2BAAsCL,OAExC,sBAAKK,UAAU,yBAAf,UACE,qBAAKA,UAAU,eAAeC,QAASX,KAAKY,aAAa,GAAzD,gBACA,qBAAKF,UAAU,eAAeC,QAASX,KAAKY,aAAa,GAAzD,gBACA,qBAAKF,UAAU,eAAf,SAA+BV,KAAKJ,MAAMC,cAC1C,qBAAKa,UAAU,eAAeC,QAASX,KAAKY,YAAY,GAAxD,gBACA,qBAAKF,UAAU,eAAeC,QAASX,KAAKY,YAAY,GAAxD,mBAEF,sBAAKF,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,6BACA,qBAAKA,UAAU,QAAf,SAAwBF,gB,GAlElBK,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a093f834.chunk.js","sourcesContent":["\nimport React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    let today=new Date();\n    let todayStr= \"\" + today.getFullYear() + today.getMonth() + today.getDate();\n\n    var currentCount = Number.parseInt(localStorage.getItem(todayStr));\n\n    currentCount = !currentCount ? 0 : currentCount;\n\n    this.state = {\n      todaysCount: currentCount,\n      todayStr: todayStr\n    };\n\n\n  }\n\n  changeValue(number) \n  {\n    let newCount = this.state.todaysCount + number;\n\n    if(newCount <= 0)\n    {\n      newCount = 0;\n    }\n    return () => {\n      localStorage.setItem(this.state.todayStr, newCount);\n      this.setState({\n        todaysCount: newCount\n      });\n    };\n  }\n\n  render() {\n\n    let first=new Date('1/1/' + (new Date().getFullYear()));\n    let today=new Date();\n\n    let diff= today - first;\n\n    let days = Math.ceil(diff / (1000*60*60*24));\n\n    let total = 0;\n\n    for(let i = 0; i <= days; i++)\n    {\n        total += i;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"item-container\">\n            <div className=\"title\">Today's Goal: {days}</div>\n          </div>\n          <div className=\"todays-count-container\">\n            <div className=\"change-value\" onClick={this.changeValue(-5)}>-5</div>\n            <div className=\"change-value\" onClick={this.changeValue(-1)}>-1</div>\n            <div className=\"todays-count\">{this.state.todaysCount}</div>\n            <div className=\"change-value\" onClick={this.changeValue(1)}>+1</div>\n            <div className=\"change-value\" onClick={this.changeValue(5)}>+5</div>\n          </div>\n          <div className=\"item-container\">\n            <div className=\"title\">Total Completed</div>\n            <div className=\"value\">{total}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}